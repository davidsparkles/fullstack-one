type User @table {
  id: ID! @isUnique
  email: String @isUnique @default(value: "test@test.de") @validate(isEmail:null, contains: "fullstack.build") @check(notGenreicAddress:"email != 'mail@fullstack.build' AND email != 'info@fullstack.build'")
  gender: Gender!
  username: String
  firstLetterOfUserName: String @computed(expression: "FirstNOfField", params: {n: 1, field: "username"})
  payload: JSON @schema(name: "userPayload")
  posts: [Post!]! @relation(name: "PostOwner")
  postContributions: [Post!]! @relation(name: "PostContributors")
  stripeAccount: String @custom(resolver: "bla")
  testDefault: String @type(name: "Date") @default(expression: "now()")
}

type AdditionPayload {
  sum: Int!
}

extend type Query {
  add(a: Int! b: Int!): AdditionPayload
}

enum Gender {
  male
  female
}
