
type UserTokenData {
  accessToken: String!
  userId: ID!
  payload: UserTokenPayload!
}

type UserTokenPayload {
  userId: ID!,
  provider: String!,
  timestamp: String!,
  userToken: String!,
  userTokenMaxAgeInSeconds: Int!
}

extend type Mutation {
  """
  Registers a new user by username and optional tenant. Dependent on implementation it sends an email to the user containing a temporary token to set a password.

  You can provide `meta` information. This can help if you want to send different emails depending on the client of the user (Native App, Webapp, Desktop, ...)
  """
  register(username: String!, tenant: String, meta: String): Boolean @custom(resolver: "@fullstack-one/auth/register")

  """
  Login a user. Get back an accessToken and metadata about it.
  """
  login(username: String!, password: String!, tenant: String): UserTokenData @custom(resolver: "@fullstack-one/auth/login")

  """
  Creates a temporary token and sends it to the user, to create a new password.

  You can provide `meta` information. This can help if you want to send different emails depending on the client of the user (Native App, Webapp, Desktop, ...). Another use-case could be to use this mutation to re-send a registration-email.
  """
  forgotPassword(username: String!, tenant: String, meta: String): Boolean @custom(resolver: "@fullstack-one/auth/forgotPassword")

  """
  Set a new password with a temporary token. This will invalidate all other sessions.
  """
  setPassword(accessToken: String!, password: String!): Boolean @custom(resolver: "@fullstack-one/auth/setPassword")

  """
  Tells if the given token is valid or not.
  """
  isUserTokenValid(accessToken: String!): Boolean @custom(resolver: "@fullstack-one/auth/isUserTokenValid")

  """
  Invalidates the given accessToken and deletes the auth cookie if set.
  """
  invalidateUserToken(accessToken: String!): Boolean @custom(resolver: "@fullstack-one/auth/invalidateUserToken")

  """
  Invalidates all accessTokens ever issued to the user and deletes the auth cookie if set.
  """
  invalidateAllUserTokens(accessToken: String!): Boolean @custom(resolver: "@fullstack-one/auth/invalidateAllUserTokens")

  """
  Sets the given accessToken into a cookie. With a set cookie, normal queries an mutations are authorized. However, auth mutations will ignore this cookie.
  """
  setCookie(accessToken: String!): Boolean @custom(resolver: "@fullstack-one/auth/setCookie")

  """
  Deletes the auth cookie.
  """
  deleteCookie: Boolean @custom(resolver: "@fullstack-one/auth/deleteCookie")
}